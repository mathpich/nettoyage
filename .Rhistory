usethis::use_mit_license(name = "David Gohel")
library(nettoyage)
m <- system.file(package = "nettoyage", "examples", "m-chanson.txt")
m
z <- readLines(m, encoding = "UTF-8")
z
z
require("stringi")
x <- stri_trans_tolower(z)
x <- stri_trans_general(x, "latin-ascii")
x <- stri_replace(x, regex = "[[:punct:]]+$", replacement = "")
x <- stri_replace_all(x, regex = "[[:punct:]]+", replacement = "_")
x <- stri_replace_all(x, regex = "[[:space:]]+", replacement = "_")
x <- stri_replace_all(x, regex = "^[0-9]+", replacement = "_")
x
m <- system.file(package = "nettoyage",
"examples", "m-chanson.txt")
z <- readLines(m, encoding = "UTF-8")
z
require("stringi")
x <- stri_trans_tolower(z)
x <- stri_trans_general(x, "latin-ascii")
x <- stri_replace(x, regex = "[[:punct:]]+$", replacement = "")
x <- stri_replace_all(x, regex = "[[:punct:]]+", replacement = "_")
x <- stri_replace_all(x, regex = "[[:space:]]+", replacement = "_")
x <- stri_replace_all(x, regex = "^[0-9]+", replacement = "_")
x <- gsub(pattern = "[_]+", "_", x)
x
m <- system.file(package = "nettoyage",
"examples", "m-chanson.txt")
z <- readLines(m, encoding = "UTF-8")
z
require("stringi")
x <- stri_trans_tolower(z)
x <- stri_trans_general(x, "latin-ascii")
x <- stri_replace(x, regex = "[[:punct:]]+$", replacement = "")
x <- stri_replace_all(x, regex = "[[:punct:]]+", replacement = "_")
x <- stri_replace_all(x, regex = "[[:space:]]+", replacement = "_")
x <- stri_replace_all(x, regex = "^[0-9]+", replacement = "_")
x <- gsub(pattern = "[_]+", "_", x)
x <- gsub(pattern = "^_", "", x)
x <- gsub(pattern = "_$", "", x)
x
source('~/.active-rstudio-document')
as_valid_names(z)
gsub
library(nettoyage)
m <- system.file(package = "nettoyage",
"examples", "m-chanson.txt")
z <- readLines(m, encoding = "UTF-8")
as_valid_names(z)
library(dplyr)
library(tidyr)
dat <- iris
ql_summarize <- function(x){
ql <- table(x, useNA = "always")
data.frame(
stat = names(ql),
value = as.integer(ql),
stringsAsFactors = FALSE
)
}
x1 <- dat %>%
select_if(is.factor) %>%
mutate_all(as.character) %>%
pivot_longer(cols = everything(), names_to = "column", values_to = "value") %>%
group_by(column) %>%
summarise(ql_summarize(value), .groups = "drop")
qt_summarize <- function(x){
qt <- quantile(x, probs = seq(0, 1, by = .25))
avg <- mean(x, na.rm = TRUE)
sd <- sd(x, na.rm = TRUE)
missing <- sum(is.na(x))
data.frame(
stat = c("min", "q1", "median", "q3", "max", "mean", "sd", "missings"),
value = c(as.double(qt), avg, sd, missing),
stringsAsFactors = FALSE
)
}
x2 <- dat %>%
select_if(is.double) %>%
pivot_longer(cols = everything(), names_to = "column", values_to = "value") %>%
group_by(column) %>%
summarise(qt_summarize(value), .groups = "drop")
x <- bind_rows(x1, x2)
x
View(x)
quantile
mean
sd
sum
everything
library(nettoyage)
summary_david(iris)
View(summary_david(iris))
View(summary_david(ggplot2::diamonds))
summary_david(ggplot2::diamonds)
as.data.frame(summary_david(ggplot2::diamonds))
library(nettoyage)
if(require("ggplot2")){}
library(nettoyage)
magrittr::`%>%`
magrittr::`%>%`
library(nettoyage)
library(nettoyage)
library(nettoyage)
myapp_dir <- rappdirs::app_dir("myapp", "mathildepichot")
myapp_dir$data()
install.packages("rappdirs")
library(rappdirs)
myapp_dir <- rappdirs::app_dir("myapp", "mathildepichot")
myapp_dir$data()
